version: '3'

services:
  proxy:
    image: 'nginx:1.21.5'
    depends_on:
      - api-gateway
    volumes:
      - './reverse-proxy/nginx.conf:/etc/nginx/nginx.conf'
    ports:
      - '80:80'

  db:
    image: 'postgres:14'
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

  website:
    build:
      context: '../../i-want-to-help-ukraine-website'
      args:
        CLOUDINARY_NAME: ${CLOUDINARY_NAME}
        CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
        CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
        CLOUDINARY_USER_AVATARS_PRESET_NAME: ${CLOUDINARY_USER_AVATARS_PRESET_NAME}
        CLOUDINARY_USER_AVATARS_FOLDER_NAME: ${CLOUDINARY_USER_AVATARS_FOLDER_NAME}
        AUTH0_DOMAIN: ${AUTH0_DOMAIN}
        AUTH0_API_URL: ${AUTH0_API_URL}
        AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
        GRAPHQL_URL: ${GRAPHQL_URL}
        AUTH0_API_TOKEN: ${AUTH0_API_TOKEN}
        PORT: ${WEBSITE_PORT}
        HOST: ${WEBSITE_HOST}
    depends_on:
      - api-gateway
    environment:
      CLOUDINARY_NAME: ${CLOUDINARY_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CLOUDINARY_USER_AVATARS_PRESET_NAME: ${CLOUDINARY_USER_AVATARS_PRESET_NAME}
      CLOUDINARY_USER_AVATARS_FOLDER_NAME: ${CLOUDINARY_USER_AVATARS_FOLDER_NAME}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_URL: ${AUTH0_API_URL}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      GRAPHQL_URL: ${GRAPHQL_URL}
      AUTH0_API_TOKEN: ${AUTH0_API_TOKEN}
      PORT: ${WEBSITE_PORT}
      HOST: ${WEBSITE_HOST}
    command: >
      sh -c "cd /usr/src/app && npm start"

  api-gateway:
    build:
      context: '../../api-gateway'
      args:
        GITHUB_NPM_TOKEN: ${GITHUB_NPM_TOKEN}
    depends_on:
      - volunteer-service
    environment:
      APP_PORT: ${GRAPHQL_SERVER_APP_PORT}
      VOLUNTEER_SERVICE_GRPC_NAME: ${VOLUNTEER_SERVICE_GRPC_NAME}
      VOLUNTEER_SERVICE_GRPC_PORT: ${VOLUNTEER_SERVICE_GRPC_PORT}
    volumes:
      - '../../api-gateway:/usr/src/app'
    command: >
      sh -c "cd /usr/src/app && npm run start:dev"

  volunteer-service:
    build:
      context: '../../volunteer-service'
      args:
        GITHUB_NPM_TOKEN: ${GITHUB_NPM_TOKEN}
    depends_on:
      - db
    environment:
      APP_PORT: ${VOLUNTEER_SERVICE_APP_PORT}
      VOLUNTEER_SERVICE_GRPC_NAME: ${VOLUNTEER_SERVICE_GRPC_NAME}
      VOLUNTEER_SERVICE_GRPC_PORT: ${VOLUNTEER_SERVICE_GRPC_PORT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${VOLUNTEER_SERVICE_DB_NAME}
    volumes:
      - '../../volunteer-service:/usr/src/app'
    command: >
      sh -c "cd /usr/src/app && npx prisma migrate dev && npm run start:dev"
    ports:
      - ${VOLUNTEER_SERVICE_APP_PORT}:${VOLUNTEER_SERVICE_APP_PORT}
